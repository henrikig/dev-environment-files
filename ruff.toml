# Inspired by https://github.com/pola-rs/polars/blob/main/py-polars/pyproject.toml

line-length = 130
fix = true

lint.select = [
  "E", # pycodestyle
  "W", # pycodestyle
  "F", # Pyflakes
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "I", # isort
  "SIM", # flake8-simplify
  "TD", # flake8-todos
  "TCH", # flake8-type-checking
  "TID", # flake8-tidy-imports
  "UP", # pyupgrade
  "PT", # flake8-pytest-style
  "RUF", # Ruff-specific rules
  "PTH", # flake8-use-pathlib
  "FA", # flake8-future-annotations
  "PIE", # flake8-pie
  "TRY", # tryceratops
  "FBT001", # flake8-boolean-trap
]

lint.ignore = [
  # Line length regulated by black
  "E501",
  # flake8-pytest-style:
  "PT011", # pytest.raises({exception}) is too broad, set the match parameter or use a more specific exception
  # flake8-simplify
  "SIM102", # Use a single `if` statement instead of nested `if` statements
  "SIM108", # Use ternary operator
  # ruff
  # "RUF005", # unpack-instead-of-concatenating-to-collection-literal
  # pycodestyle
  # flake8-type-checking
  "TCH002", # Move imports to type checking block
  # flake8-todos
  "TD002", # Missing author in TODO
  "TD003", # Missing issue link on the line following this TODO
  # tryceratops
  "TRY003", # Avoid specifying long messages outside the exception class
  # Lints below are turned off because of conflicts with the ruff formatter
  "D206",
  "W191",
]

extend-exclude = ["env"]

[lint.pycodestyle]
max-doc-length = 88

[lint.flake8-tidy-imports]
ban-relative-imports = "all"

[lint.flake8-type-checking]
strict = true

[lint.isort]
force-single-line = true
